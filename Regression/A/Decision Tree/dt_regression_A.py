# -*- coding: utf-8 -*-
"""DT-Regression-por

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yWyqujxFENiK0V8aHE03biglMe_hILGd
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor, export_graphviz
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np
import graphviz

# Load the dataset
data = pd.read_csv('student-por.csv', sep=';')

# Encode categorical variables as numeric
data_encoded = pd.get_dummies(data, drop_first=True)

# Define features (all features + G1 + G2) and target
features = list(data_encoded.columns)
features.remove('G3')  # Remove the target variable
X = data_encoded[features]
y = data_encoded['G3']

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Decision Tree Regressor
regressor = DecisionTreeRegressor(random_state=42, max_depth=4)
regressor.fit(X_train, y_train)

# Make predictions
y_pred = regressor.predict(X_test)

# Evaluate the model
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"RMSE: {rmse:.2f}")
print(f"Mean Squared Error: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Visualize the decision tree
dot_data = export_graphviz(
    regressor,
    out_file=None,
    feature_names=features,
    filled=True,
    rounded=True,
    special_characters=True
)
graph = graphviz.Source(dot_data)
graph.render("decision_tree_regression_case_A", format="png", cleanup=True)
print("Decision tree visualization saved as 'decision_tree_regression_case_A.png'.")